'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DataSet_pCAT_ESTABLECIMIENTOS_B"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DataSet_pCAT_ESTABLECIMIENTOS_B
    Inherits Global.System.Data.DataSet
    
    Private tablepCAT_ESTABLECIMIENTOS_B As pCAT_ESTABLECIMIENTOS_BDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("pCAT_ESTABLECIMIENTOS_B")) Is Nothing) Then
                MyBase.Tables.Add(New pCAT_ESTABLECIMIENTOS_BDataTable(ds.Tables("pCAT_ESTABLECIMIENTOS_B")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property pCAT_ESTABLECIMIENTOS_B() As pCAT_ESTABLECIMIENTOS_BDataTable
        Get
            Return Me.tablepCAT_ESTABLECIMIENTOS_B
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DataSet_pCAT_ESTABLECIMIENTOS_B = CType(MyBase.Clone,DataSet_pCAT_ESTABLECIMIENTOS_B)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("pCAT_ESTABLECIMIENTOS_B")) Is Nothing) Then
                MyBase.Tables.Add(New pCAT_ESTABLECIMIENTOS_BDataTable(ds.Tables("pCAT_ESTABLECIMIENTOS_B")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tablepCAT_ESTABLECIMIENTOS_B = CType(MyBase.Tables("pCAT_ESTABLECIMIENTOS_B"),pCAT_ESTABLECIMIENTOS_BDataTable)
        If (initTable = true) Then
            If (Not (Me.tablepCAT_ESTABLECIMIENTOS_B) Is Nothing) Then
                Me.tablepCAT_ESTABLECIMIENTOS_B.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "DataSet_pCAT_ESTABLECIMIENTOS_B"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DataSet_pCAT_ESTABLECIMIENTOS_B.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tablepCAT_ESTABLECIMIENTOS_B = New pCAT_ESTABLECIMIENTOS_BDataTable()
        MyBase.Tables.Add(Me.tablepCAT_ESTABLECIMIENTOS_B)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializepCAT_ESTABLECIMIENTOS_B() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DataSet_pCAT_ESTABLECIMIENTOS_B = New DataSet_pCAT_ESTABLECIMIENTOS_B()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub pCAT_ESTABLECIMIENTOS_BRowChangeEventHandler(ByVal sender As Object, ByVal e As pCAT_ESTABLECIMIENTOS_BRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class pCAT_ESTABLECIMIENTOS_BDataTable
        Inherits Global.System.Data.TypedTableBase(Of pCAT_ESTABLECIMIENTOS_BRow)
        
        Private columnCVE_ESTABLECIMIENTO As Global.System.Data.DataColumn
        
        Private columnGIRO As Global.System.Data.DataColumn
        
        Private columnGIROX As Global.System.Data.DataColumn
        
        Private columnCVE_SCIAN As Global.System.Data.DataColumn
        
        Private columnMUNICIPIO As Global.System.Data.DataColumn
        
        Private columnMUNICIPIOX As Global.System.Data.DataColumn
        
        Private columnNOM_PROPIETARIO As Global.System.Data.DataColumn
        
        Private columnPROPIETARIO_CARGO As Global.System.Data.DataColumn
        
        Private columnPROPIETARIO_DOMICILIO As Global.System.Data.DataColumn
        
        Private columnPROPIETARIO_IDENTIFICACION As Global.System.Data.DataColumn
        
        Private columnRAZON_SOCIAL As Global.System.Data.DataColumn
        
        Private columnRAZON_SOCIALX As Global.System.Data.DataColumn
        
        Private columnTELEFONO As Global.System.Data.DataColumn
        
        Private columnEMAIL As Global.System.Data.DataColumn
        
        Private columnRFC As Global.System.Data.DataColumn
        
        Private columnDOMICILIO As Global.System.Data.DataColumn
        
        Private columnCOLONIA As Global.System.Data.DataColumn
        
        Private columnCODIGO_POSTAL As Global.System.Data.DataColumn
        
        Private columnVOLUMEN_PRODUCCION As Global.System.Data.DataColumn
        
        Private columnFECHA_ALTA As Global.System.Data.DataColumn
        
        Private columnFECHA_MODIFICADO As Global.System.Data.DataColumn
        
        Private columnAVISO_FUNCIONAMIENTO As Global.System.Data.DataColumn
        
        Private columnLICENCIA_SANITARIA As Global.System.Data.DataColumn
        
        Private columnDIAS_LABORALES As Global.System.Data.DataColumn
        
        Private columnTURNOS As Global.System.Data.DataColumn
        
        Private columnHORARIO_LABORES As Global.System.Data.DataColumn
        
        Private columnESTATUS As Global.System.Data.DataColumn
        
        Private columnHABILITADO As Global.System.Data.DataColumn
        
        Private columnHORA_INICIO_LABORES As Global.System.Data.DataColumn
        
        Private columnHORA_FIN_LABORES As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "pCAT_ESTABLECIMIENTOS_B"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CVE_ESTABLECIMIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCVE_ESTABLECIMIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GIROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGIRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GIROXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGIROX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CVE_SCIANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCVE_SCIAN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MUNICIPIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMUNICIPIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MUNICIPIOXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMUNICIPIOX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOM_PROPIETARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOM_PROPIETARIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PROPIETARIO_CARGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROPIETARIO_CARGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PROPIETARIO_DOMICILIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROPIETARIO_DOMICILIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PROPIETARIO_IDENTIFICACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROPIETARIO_IDENTIFICACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RAZON_SOCIALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRAZON_SOCIAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RAZON_SOCIALXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRAZON_SOCIALX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TELEFONOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTELEFONO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EMAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RFCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRFC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOMICILIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOMICILIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COLONIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOLONIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODIGO_POSTALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_POSTAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VOLUMEN_PRODUCCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVOLUMEN_PRODUCCION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHA_ALTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_ALTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHA_MODIFICADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_MODIFICADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AVISO_FUNCIONAMIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAVISO_FUNCIONAMIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LICENCIA_SANITARIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLICENCIA_SANITARIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DIAS_LABORALESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIAS_LABORALES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TURNOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTURNOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HORARIO_LABORESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHORARIO_LABORES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ESTATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HABILITADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHABILITADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HORA_INICIO_LABORESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHORA_INICIO_LABORES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HORA_FIN_LABORESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHORA_FIN_LABORES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As pCAT_ESTABLECIMIENTOS_BRow
            Get
                Return CType(Me.Rows(index),pCAT_ESTABLECIMIENTOS_BRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event pCAT_ESTABLECIMIENTOS_BRowChanging As pCAT_ESTABLECIMIENTOS_BRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event pCAT_ESTABLECIMIENTOS_BRowChanged As pCAT_ESTABLECIMIENTOS_BRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event pCAT_ESTABLECIMIENTOS_BRowDeleting As pCAT_ESTABLECIMIENTOS_BRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event pCAT_ESTABLECIMIENTOS_BRowDeleted As pCAT_ESTABLECIMIENTOS_BRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddpCAT_ESTABLECIMIENTOS_BRow(ByVal row As pCAT_ESTABLECIMIENTOS_BRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddpCAT_ESTABLECIMIENTOS_BRow( _
                    ByVal CVE_ESTABLECIMIENTO As Integer,  _
                    ByVal GIRO As String,  _
                    ByVal GIROX As String,  _
                    ByVal CVE_SCIAN As String,  _
                    ByVal MUNICIPIO As String,  _
                    ByVal MUNICIPIOX As String,  _
                    ByVal NOM_PROPIETARIO As String,  _
                    ByVal PROPIETARIO_CARGO As String,  _
                    ByVal PROPIETARIO_DOMICILIO As String,  _
                    ByVal PROPIETARIO_IDENTIFICACION As String,  _
                    ByVal RAZON_SOCIAL As String,  _
                    ByVal RAZON_SOCIALX As String,  _
                    ByVal TELEFONO As String,  _
                    ByVal EMAIL As String,  _
                    ByVal RFC As String,  _
                    ByVal DOMICILIO As String,  _
                    ByVal COLONIA As String,  _
                    ByVal CODIGO_POSTAL As String,  _
                    ByVal VOLUMEN_PRODUCCION As String,  _
                    ByVal FECHA_ALTA As Date,  _
                    ByVal FECHA_MODIFICADO As Date,  _
                    ByVal AVISO_FUNCIONAMIENTO As Boolean,  _
                    ByVal LICENCIA_SANITARIA As Boolean,  _
                    ByVal DIAS_LABORALES As String,  _
                    ByVal TURNOS As Integer,  _
                    ByVal HORARIO_LABORES As String,  _
                    ByVal ESTATUS As String,  _
                    ByVal HABILITADO As Boolean,  _
                    ByVal HORA_INICIO_LABORES As System.TimeSpan,  _
                    ByVal HORA_FIN_LABORES As System.TimeSpan) As pCAT_ESTABLECIMIENTOS_BRow
            Dim rowpCAT_ESTABLECIMIENTOS_BRow As pCAT_ESTABLECIMIENTOS_BRow = CType(Me.NewRow,pCAT_ESTABLECIMIENTOS_BRow)
            Dim columnValuesArray() As Object = New Object() {CVE_ESTABLECIMIENTO, GIRO, GIROX, CVE_SCIAN, MUNICIPIO, MUNICIPIOX, NOM_PROPIETARIO, PROPIETARIO_CARGO, PROPIETARIO_DOMICILIO, PROPIETARIO_IDENTIFICACION, RAZON_SOCIAL, RAZON_SOCIALX, TELEFONO, EMAIL, RFC, DOMICILIO, COLONIA, CODIGO_POSTAL, VOLUMEN_PRODUCCION, FECHA_ALTA, FECHA_MODIFICADO, AVISO_FUNCIONAMIENTO, LICENCIA_SANITARIA, DIAS_LABORALES, TURNOS, HORARIO_LABORES, ESTATUS, HABILITADO, HORA_INICIO_LABORES, HORA_FIN_LABORES}
            rowpCAT_ESTABLECIMIENTOS_BRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowpCAT_ESTABLECIMIENTOS_BRow)
            Return rowpCAT_ESTABLECIMIENTOS_BRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCVE_ESTABLECIMIENTO(ByVal CVE_ESTABLECIMIENTO As Integer) As pCAT_ESTABLECIMIENTOS_BRow
            Return CType(Me.Rows.Find(New Object() {CVE_ESTABLECIMIENTO}),pCAT_ESTABLECIMIENTOS_BRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As pCAT_ESTABLECIMIENTOS_BDataTable = CType(MyBase.Clone,pCAT_ESTABLECIMIENTOS_BDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New pCAT_ESTABLECIMIENTOS_BDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCVE_ESTABLECIMIENTO = MyBase.Columns("CVE_ESTABLECIMIENTO")
            Me.columnGIRO = MyBase.Columns("GIRO")
            Me.columnGIROX = MyBase.Columns("GIROX")
            Me.columnCVE_SCIAN = MyBase.Columns("CVE_SCIAN")
            Me.columnMUNICIPIO = MyBase.Columns("MUNICIPIO")
            Me.columnMUNICIPIOX = MyBase.Columns("MUNICIPIOX")
            Me.columnNOM_PROPIETARIO = MyBase.Columns("NOM_PROPIETARIO")
            Me.columnPROPIETARIO_CARGO = MyBase.Columns("PROPIETARIO_CARGO")
            Me.columnPROPIETARIO_DOMICILIO = MyBase.Columns("PROPIETARIO_DOMICILIO")
            Me.columnPROPIETARIO_IDENTIFICACION = MyBase.Columns("PROPIETARIO_IDENTIFICACION")
            Me.columnRAZON_SOCIAL = MyBase.Columns("RAZON_SOCIAL")
            Me.columnRAZON_SOCIALX = MyBase.Columns("RAZON_SOCIALX")
            Me.columnTELEFONO = MyBase.Columns("TELEFONO")
            Me.columnEMAIL = MyBase.Columns("EMAIL")
            Me.columnRFC = MyBase.Columns("RFC")
            Me.columnDOMICILIO = MyBase.Columns("DOMICILIO")
            Me.columnCOLONIA = MyBase.Columns("COLONIA")
            Me.columnCODIGO_POSTAL = MyBase.Columns("CODIGO_POSTAL")
            Me.columnVOLUMEN_PRODUCCION = MyBase.Columns("VOLUMEN_PRODUCCION")
            Me.columnFECHA_ALTA = MyBase.Columns("FECHA_ALTA")
            Me.columnFECHA_MODIFICADO = MyBase.Columns("FECHA_MODIFICADO")
            Me.columnAVISO_FUNCIONAMIENTO = MyBase.Columns("AVISO_FUNCIONAMIENTO")
            Me.columnLICENCIA_SANITARIA = MyBase.Columns("LICENCIA_SANITARIA")
            Me.columnDIAS_LABORALES = MyBase.Columns("DIAS_LABORALES")
            Me.columnTURNOS = MyBase.Columns("TURNOS")
            Me.columnHORARIO_LABORES = MyBase.Columns("HORARIO_LABORES")
            Me.columnESTATUS = MyBase.Columns("ESTATUS")
            Me.columnHABILITADO = MyBase.Columns("HABILITADO")
            Me.columnHORA_INICIO_LABORES = MyBase.Columns("HORA_INICIO_LABORES")
            Me.columnHORA_FIN_LABORES = MyBase.Columns("HORA_FIN_LABORES")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCVE_ESTABLECIMIENTO = New Global.System.Data.DataColumn("CVE_ESTABLECIMIENTO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCVE_ESTABLECIMIENTO)
            Me.columnGIRO = New Global.System.Data.DataColumn("GIRO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGIRO)
            Me.columnGIROX = New Global.System.Data.DataColumn("GIROX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGIROX)
            Me.columnCVE_SCIAN = New Global.System.Data.DataColumn("CVE_SCIAN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCVE_SCIAN)
            Me.columnMUNICIPIO = New Global.System.Data.DataColumn("MUNICIPIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMUNICIPIO)
            Me.columnMUNICIPIOX = New Global.System.Data.DataColumn("MUNICIPIOX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMUNICIPIOX)
            Me.columnNOM_PROPIETARIO = New Global.System.Data.DataColumn("NOM_PROPIETARIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOM_PROPIETARIO)
            Me.columnPROPIETARIO_CARGO = New Global.System.Data.DataColumn("PROPIETARIO_CARGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROPIETARIO_CARGO)
            Me.columnPROPIETARIO_DOMICILIO = New Global.System.Data.DataColumn("PROPIETARIO_DOMICILIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROPIETARIO_DOMICILIO)
            Me.columnPROPIETARIO_IDENTIFICACION = New Global.System.Data.DataColumn("PROPIETARIO_IDENTIFICACION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROPIETARIO_IDENTIFICACION)
            Me.columnRAZON_SOCIAL = New Global.System.Data.DataColumn("RAZON_SOCIAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRAZON_SOCIAL)
            Me.columnRAZON_SOCIALX = New Global.System.Data.DataColumn("RAZON_SOCIALX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRAZON_SOCIALX)
            Me.columnTELEFONO = New Global.System.Data.DataColumn("TELEFONO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTELEFONO)
            Me.columnEMAIL = New Global.System.Data.DataColumn("EMAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMAIL)
            Me.columnRFC = New Global.System.Data.DataColumn("RFC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRFC)
            Me.columnDOMICILIO = New Global.System.Data.DataColumn("DOMICILIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOMICILIO)
            Me.columnCOLONIA = New Global.System.Data.DataColumn("COLONIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOLONIA)
            Me.columnCODIGO_POSTAL = New Global.System.Data.DataColumn("CODIGO_POSTAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_POSTAL)
            Me.columnVOLUMEN_PRODUCCION = New Global.System.Data.DataColumn("VOLUMEN_PRODUCCION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVOLUMEN_PRODUCCION)
            Me.columnFECHA_ALTA = New Global.System.Data.DataColumn("FECHA_ALTA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_ALTA)
            Me.columnFECHA_MODIFICADO = New Global.System.Data.DataColumn("FECHA_MODIFICADO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_MODIFICADO)
            Me.columnAVISO_FUNCIONAMIENTO = New Global.System.Data.DataColumn("AVISO_FUNCIONAMIENTO", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAVISO_FUNCIONAMIENTO)
            Me.columnLICENCIA_SANITARIA = New Global.System.Data.DataColumn("LICENCIA_SANITARIA", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLICENCIA_SANITARIA)
            Me.columnDIAS_LABORALES = New Global.System.Data.DataColumn("DIAS_LABORALES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIAS_LABORALES)
            Me.columnTURNOS = New Global.System.Data.DataColumn("TURNOS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTURNOS)
            Me.columnHORARIO_LABORES = New Global.System.Data.DataColumn("HORARIO_LABORES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHORARIO_LABORES)
            Me.columnESTATUS = New Global.System.Data.DataColumn("ESTATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTATUS)
            Me.columnHABILITADO = New Global.System.Data.DataColumn("HABILITADO", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHABILITADO)
            Me.columnHORA_INICIO_LABORES = New Global.System.Data.DataColumn("HORA_INICIO_LABORES", GetType(Global.System.TimeSpan), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHORA_INICIO_LABORES)
            Me.columnHORA_FIN_LABORES = New Global.System.Data.DataColumn("HORA_FIN_LABORES", GetType(Global.System.TimeSpan), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHORA_FIN_LABORES)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCVE_ESTABLECIMIENTO}, true))
            Me.columnCVE_ESTABLECIMIENTO.AllowDBNull = false
            Me.columnCVE_ESTABLECIMIENTO.Unique = true
            Me.columnGIRO.AllowDBNull = false
            Me.columnGIRO.MaxLength = 100
            Me.columnGIROX.ReadOnly = true
            Me.columnGIROX.MaxLength = 115
            Me.columnCVE_SCIAN.ReadOnly = true
            Me.columnCVE_SCIAN.MaxLength = 315
            Me.columnMUNICIPIO.AllowDBNull = false
            Me.columnMUNICIPIO.MaxLength = 100
            Me.columnMUNICIPIOX.ReadOnly = true
            Me.columnMUNICIPIOX.MaxLength = 115
            Me.columnNOM_PROPIETARIO.AllowDBNull = false
            Me.columnNOM_PROPIETARIO.MaxLength = 50
            Me.columnPROPIETARIO_CARGO.AllowDBNull = false
            Me.columnPROPIETARIO_CARGO.MaxLength = 50
            Me.columnPROPIETARIO_DOMICILIO.MaxLength = 200
            Me.columnPROPIETARIO_IDENTIFICACION.MaxLength = 50
            Me.columnRAZON_SOCIAL.AllowDBNull = false
            Me.columnRAZON_SOCIAL.MaxLength = 100
            Me.columnRAZON_SOCIALX.ReadOnly = true
            Me.columnRAZON_SOCIALX.MaxLength = 153
            Me.columnTELEFONO.AllowDBNull = false
            Me.columnTELEFONO.MaxLength = 50
            Me.columnEMAIL.AllowDBNull = false
            Me.columnEMAIL.MaxLength = 50
            Me.columnRFC.AllowDBNull = false
            Me.columnRFC.MaxLength = 50
            Me.columnDOMICILIO.AllowDBNull = false
            Me.columnDOMICILIO.MaxLength = 200
            Me.columnCOLONIA.AllowDBNull = false
            Me.columnCOLONIA.MaxLength = 50
            Me.columnCODIGO_POSTAL.ReadOnly = true
            Me.columnCODIGO_POSTAL.MaxLength = 50
            Me.columnVOLUMEN_PRODUCCION.AllowDBNull = false
            Me.columnVOLUMEN_PRODUCCION.MaxLength = 50
            Me.columnAVISO_FUNCIONAMIENTO.AllowDBNull = false
            Me.columnLICENCIA_SANITARIA.AllowDBNull = false
            Me.columnDIAS_LABORALES.AllowDBNull = false
            Me.columnDIAS_LABORALES.MaxLength = 20
            Me.columnTURNOS.AllowDBNull = false
            Me.columnHORARIO_LABORES.ReadOnly = true
            Me.columnHORARIO_LABORES.MaxLength = 13
            Me.columnESTATUS.AllowDBNull = false
            Me.columnESTATUS.MaxLength = 50
            Me.columnHABILITADO.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewpCAT_ESTABLECIMIENTOS_BRow() As pCAT_ESTABLECIMIENTOS_BRow
            Return CType(Me.NewRow,pCAT_ESTABLECIMIENTOS_BRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New pCAT_ESTABLECIMIENTOS_BRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(pCAT_ESTABLECIMIENTOS_BRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.pCAT_ESTABLECIMIENTOS_BRowChangedEvent) Is Nothing) Then
                RaiseEvent pCAT_ESTABLECIMIENTOS_BRowChanged(Me, New pCAT_ESTABLECIMIENTOS_BRowChangeEvent(CType(e.Row,pCAT_ESTABLECIMIENTOS_BRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.pCAT_ESTABLECIMIENTOS_BRowChangingEvent) Is Nothing) Then
                RaiseEvent pCAT_ESTABLECIMIENTOS_BRowChanging(Me, New pCAT_ESTABLECIMIENTOS_BRowChangeEvent(CType(e.Row,pCAT_ESTABLECIMIENTOS_BRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.pCAT_ESTABLECIMIENTOS_BRowDeletedEvent) Is Nothing) Then
                RaiseEvent pCAT_ESTABLECIMIENTOS_BRowDeleted(Me, New pCAT_ESTABLECIMIENTOS_BRowChangeEvent(CType(e.Row,pCAT_ESTABLECIMIENTOS_BRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.pCAT_ESTABLECIMIENTOS_BRowDeletingEvent) Is Nothing) Then
                RaiseEvent pCAT_ESTABLECIMIENTOS_BRowDeleting(Me, New pCAT_ESTABLECIMIENTOS_BRowChangeEvent(CType(e.Row,pCAT_ESTABLECIMIENTOS_BRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovepCAT_ESTABLECIMIENTOS_BRow(ByVal row As pCAT_ESTABLECIMIENTOS_BRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet_pCAT_ESTABLECIMIENTOS_B = New DataSet_pCAT_ESTABLECIMIENTOS_B()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "pCAT_ESTABLECIMIENTOS_BDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class pCAT_ESTABLECIMIENTOS_BRow
        Inherits Global.System.Data.DataRow
        
        Private tablepCAT_ESTABLECIMIENTOS_B As pCAT_ESTABLECIMIENTOS_BDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablepCAT_ESTABLECIMIENTOS_B = CType(Me.Table,pCAT_ESTABLECIMIENTOS_BDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CVE_ESTABLECIMIENTO() As Integer
            Get
                Return CType(Me(Me.tablepCAT_ESTABLECIMIENTOS_B.CVE_ESTABLECIMIENTOColumn),Integer)
            End Get
            Set
                Me(Me.tablepCAT_ESTABLECIMIENTOS_B.CVE_ESTABLECIMIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GIRO() As String
            Get
                Return CType(Me(Me.tablepCAT_ESTABLECIMIENTOS_B.GIROColumn),String)
            End Get
            Set
                Me(Me.tablepCAT_ESTABLECIMIENTOS_B.GIROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GIROX() As String
            Get
                Try 
                    Return CType(Me(Me.tablepCAT_ESTABLECIMIENTOS_B.GIROXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GIROX' in table 'pCAT_ESTABLECIMIENTOS_B' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepCAT_ESTABLECIMIENTOS_B.GIROXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CVE_SCIAN() As String
            Get
                Try 
                    Return CType(Me(Me.tablepCAT_ESTABLECIMIENTOS_B.CVE_SCIANColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CVE_SCIAN' in table 'pCAT_ESTABLECIMIENTOS_B' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepCAT_ESTABLECIMIENTOS_B.CVE_SCIANColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MUNICIPIO() As String
            Get
                Return CType(Me(Me.tablepCAT_ESTABLECIMIENTOS_B.MUNICIPIOColumn),String)
            End Get
            Set
                Me(Me.tablepCAT_ESTABLECIMIENTOS_B.MUNICIPIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MUNICIPIOX() As String
            Get
                Try 
                    Return CType(Me(Me.tablepCAT_ESTABLECIMIENTOS_B.MUNICIPIOXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MUNICIPIOX' in table 'pCAT_ESTABLECIMIENTOS_B' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepCAT_ESTABLECIMIENTOS_B.MUNICIPIOXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOM_PROPIETARIO() As String
            Get
                Return CType(Me(Me.tablepCAT_ESTABLECIMIENTOS_B.NOM_PROPIETARIOColumn),String)
            End Get
            Set
                Me(Me.tablepCAT_ESTABLECIMIENTOS_B.NOM_PROPIETARIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PROPIETARIO_CARGO() As String
            Get
                Return CType(Me(Me.tablepCAT_ESTABLECIMIENTOS_B.PROPIETARIO_CARGOColumn),String)
            End Get
            Set
                Me(Me.tablepCAT_ESTABLECIMIENTOS_B.PROPIETARIO_CARGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PROPIETARIO_DOMICILIO() As String
            Get
                Try 
                    Return CType(Me(Me.tablepCAT_ESTABLECIMIENTOS_B.PROPIETARIO_DOMICILIOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROPIETARIO_DOMICILIO' in table 'pCAT_ESTABLECIMIENTOS_B' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepCAT_ESTABLECIMIENTOS_B.PROPIETARIO_DOMICILIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PROPIETARIO_IDENTIFICACION() As String
            Get
                Try 
                    Return CType(Me(Me.tablepCAT_ESTABLECIMIENTOS_B.PROPIETARIO_IDENTIFICACIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROPIETARIO_IDENTIFICACION' in table 'pCAT_ESTABLECIMIENTOS"& _ 
                            "_B' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepCAT_ESTABLECIMIENTOS_B.PROPIETARIO_IDENTIFICACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RAZON_SOCIAL() As String
            Get
                Return CType(Me(Me.tablepCAT_ESTABLECIMIENTOS_B.RAZON_SOCIALColumn),String)
            End Get
            Set
                Me(Me.tablepCAT_ESTABLECIMIENTOS_B.RAZON_SOCIALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RAZON_SOCIALX() As String
            Get
                Try 
                    Return CType(Me(Me.tablepCAT_ESTABLECIMIENTOS_B.RAZON_SOCIALXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RAZON_SOCIALX' in table 'pCAT_ESTABLECIMIENTOS_B' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablepCAT_ESTABLECIMIENTOS_B.RAZON_SOCIALXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TELEFONO() As String
            Get
                Return CType(Me(Me.tablepCAT_ESTABLECIMIENTOS_B.TELEFONOColumn),String)
            End Get
            Set
                Me(Me.tablepCAT_ESTABLECIMIENTOS_B.TELEFONOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EMAIL() As String
            Get
                Return CType(Me(Me.tablepCAT_ESTABLECIMIENTOS_B.EMAILColumn),String)
            End Get
            Set
                Me(Me.tablepCAT_ESTABLECIMIENTOS_B.EMAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RFC() As String
            Get
                Return CType(Me(Me.tablepCAT_ESTABLECIMIENTOS_B.RFCColumn),String)
            End Get
            Set
                Me(Me.tablepCAT_ESTABLECIMIENTOS_B.RFCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOMICILIO() As String
            Get
                Return CType(Me(Me.tablepCAT_ESTABLECIMIENTOS_B.DOMICILIOColumn),String)
            End Get
            Set
                Me(Me.tablepCAT_ESTABLECIMIENTOS_B.DOMICILIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COLONIA() As String
            Get
                Return CType(Me(Me.tablepCAT_ESTABLECIMIENTOS_B.COLONIAColumn),String)
            End Get
            Set
                Me(Me.tablepCAT_ESTABLECIMIENTOS_B.COLONIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODIGO_POSTAL() As String
            Get
                Try 
                    Return CType(Me(Me.tablepCAT_ESTABLECIMIENTOS_B.CODIGO_POSTALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO_POSTAL' in table 'pCAT_ESTABLECIMIENTOS_B' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablepCAT_ESTABLECIMIENTOS_B.CODIGO_POSTALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VOLUMEN_PRODUCCION() As String
            Get
                Return CType(Me(Me.tablepCAT_ESTABLECIMIENTOS_B.VOLUMEN_PRODUCCIONColumn),String)
            End Get
            Set
                Me(Me.tablepCAT_ESTABLECIMIENTOS_B.VOLUMEN_PRODUCCIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECHA_ALTA() As Date
            Get
                Try 
                    Return CType(Me(Me.tablepCAT_ESTABLECIMIENTOS_B.FECHA_ALTAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHA_ALTA' in table 'pCAT_ESTABLECIMIENTOS_B' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepCAT_ESTABLECIMIENTOS_B.FECHA_ALTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECHA_MODIFICADO() As Date
            Get
                Try 
                    Return CType(Me(Me.tablepCAT_ESTABLECIMIENTOS_B.FECHA_MODIFICADOColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHA_MODIFICADO' in table 'pCAT_ESTABLECIMIENTOS_B' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepCAT_ESTABLECIMIENTOS_B.FECHA_MODIFICADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AVISO_FUNCIONAMIENTO() As Boolean
            Get
                Return CType(Me(Me.tablepCAT_ESTABLECIMIENTOS_B.AVISO_FUNCIONAMIENTOColumn),Boolean)
            End Get
            Set
                Me(Me.tablepCAT_ESTABLECIMIENTOS_B.AVISO_FUNCIONAMIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LICENCIA_SANITARIA() As Boolean
            Get
                Return CType(Me(Me.tablepCAT_ESTABLECIMIENTOS_B.LICENCIA_SANITARIAColumn),Boolean)
            End Get
            Set
                Me(Me.tablepCAT_ESTABLECIMIENTOS_B.LICENCIA_SANITARIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DIAS_LABORALES() As String
            Get
                Return CType(Me(Me.tablepCAT_ESTABLECIMIENTOS_B.DIAS_LABORALESColumn),String)
            End Get
            Set
                Me(Me.tablepCAT_ESTABLECIMIENTOS_B.DIAS_LABORALESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TURNOS() As Integer
            Get
                Return CType(Me(Me.tablepCAT_ESTABLECIMIENTOS_B.TURNOSColumn),Integer)
            End Get
            Set
                Me(Me.tablepCAT_ESTABLECIMIENTOS_B.TURNOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HORARIO_LABORES() As String
            Get
                Try 
                    Return CType(Me(Me.tablepCAT_ESTABLECIMIENTOS_B.HORARIO_LABORESColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HORARIO_LABORES' in table 'pCAT_ESTABLECIMIENTOS_B' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablepCAT_ESTABLECIMIENTOS_B.HORARIO_LABORESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ESTATUS() As String
            Get
                Return CType(Me(Me.tablepCAT_ESTABLECIMIENTOS_B.ESTATUSColumn),String)
            End Get
            Set
                Me(Me.tablepCAT_ESTABLECIMIENTOS_B.ESTATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HABILITADO() As Boolean
            Get
                Return CType(Me(Me.tablepCAT_ESTABLECIMIENTOS_B.HABILITADOColumn),Boolean)
            End Get
            Set
                Me(Me.tablepCAT_ESTABLECIMIENTOS_B.HABILITADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HORA_INICIO_LABORES() As System.TimeSpan
            Get
                Try 
                    Return CType(Me(Me.tablepCAT_ESTABLECIMIENTOS_B.HORA_INICIO_LABORESColumn),Global.System.TimeSpan)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HORA_INICIO_LABORES' in table 'pCAT_ESTABLECIMIENTOS_B' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepCAT_ESTABLECIMIENTOS_B.HORA_INICIO_LABORESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HORA_FIN_LABORES() As System.TimeSpan
            Get
                Try 
                    Return CType(Me(Me.tablepCAT_ESTABLECIMIENTOS_B.HORA_FIN_LABORESColumn),Global.System.TimeSpan)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HORA_FIN_LABORES' in table 'pCAT_ESTABLECIMIENTOS_B' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepCAT_ESTABLECIMIENTOS_B.HORA_FIN_LABORESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGIROXNull() As Boolean
            Return Me.IsNull(Me.tablepCAT_ESTABLECIMIENTOS_B.GIROXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGIROXNull()
            Me(Me.tablepCAT_ESTABLECIMIENTOS_B.GIROXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCVE_SCIANNull() As Boolean
            Return Me.IsNull(Me.tablepCAT_ESTABLECIMIENTOS_B.CVE_SCIANColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCVE_SCIANNull()
            Me(Me.tablepCAT_ESTABLECIMIENTOS_B.CVE_SCIANColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMUNICIPIOXNull() As Boolean
            Return Me.IsNull(Me.tablepCAT_ESTABLECIMIENTOS_B.MUNICIPIOXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMUNICIPIOXNull()
            Me(Me.tablepCAT_ESTABLECIMIENTOS_B.MUNICIPIOXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPROPIETARIO_DOMICILIONull() As Boolean
            Return Me.IsNull(Me.tablepCAT_ESTABLECIMIENTOS_B.PROPIETARIO_DOMICILIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPROPIETARIO_DOMICILIONull()
            Me(Me.tablepCAT_ESTABLECIMIENTOS_B.PROPIETARIO_DOMICILIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPROPIETARIO_IDENTIFICACIONNull() As Boolean
            Return Me.IsNull(Me.tablepCAT_ESTABLECIMIENTOS_B.PROPIETARIO_IDENTIFICACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPROPIETARIO_IDENTIFICACIONNull()
            Me(Me.tablepCAT_ESTABLECIMIENTOS_B.PROPIETARIO_IDENTIFICACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRAZON_SOCIALXNull() As Boolean
            Return Me.IsNull(Me.tablepCAT_ESTABLECIMIENTOS_B.RAZON_SOCIALXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRAZON_SOCIALXNull()
            Me(Me.tablepCAT_ESTABLECIMIENTOS_B.RAZON_SOCIALXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODIGO_POSTALNull() As Boolean
            Return Me.IsNull(Me.tablepCAT_ESTABLECIMIENTOS_B.CODIGO_POSTALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODIGO_POSTALNull()
            Me(Me.tablepCAT_ESTABLECIMIENTOS_B.CODIGO_POSTALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECHA_ALTANull() As Boolean
            Return Me.IsNull(Me.tablepCAT_ESTABLECIMIENTOS_B.FECHA_ALTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECHA_ALTANull()
            Me(Me.tablepCAT_ESTABLECIMIENTOS_B.FECHA_ALTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECHA_MODIFICADONull() As Boolean
            Return Me.IsNull(Me.tablepCAT_ESTABLECIMIENTOS_B.FECHA_MODIFICADOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECHA_MODIFICADONull()
            Me(Me.tablepCAT_ESTABLECIMIENTOS_B.FECHA_MODIFICADOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHORARIO_LABORESNull() As Boolean
            Return Me.IsNull(Me.tablepCAT_ESTABLECIMIENTOS_B.HORARIO_LABORESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHORARIO_LABORESNull()
            Me(Me.tablepCAT_ESTABLECIMIENTOS_B.HORARIO_LABORESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHORA_INICIO_LABORESNull() As Boolean
            Return Me.IsNull(Me.tablepCAT_ESTABLECIMIENTOS_B.HORA_INICIO_LABORESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHORA_INICIO_LABORESNull()
            Me(Me.tablepCAT_ESTABLECIMIENTOS_B.HORA_INICIO_LABORESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHORA_FIN_LABORESNull() As Boolean
            Return Me.IsNull(Me.tablepCAT_ESTABLECIMIENTOS_B.HORA_FIN_LABORESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHORA_FIN_LABORESNull()
            Me(Me.tablepCAT_ESTABLECIMIENTOS_B.HORA_FIN_LABORESColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class pCAT_ESTABLECIMIENTOS_BRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As pCAT_ESTABLECIMIENTOS_BRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As pCAT_ESTABLECIMIENTOS_BRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As pCAT_ESTABLECIMIENTOS_BRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DataSet_pCAT_ESTABLECIMIENTOS_BTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class pCAT_ESTABLECIMIENTOS_BTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "pCAT_ESTABLECIMIENTOS_B"
            tableMapping.ColumnMappings.Add("CVE_ESTABLECIMIENTO", "CVE_ESTABLECIMIENTO")
            tableMapping.ColumnMappings.Add("GIRO", "GIRO")
            tableMapping.ColumnMappings.Add("GIROX", "GIROX")
            tableMapping.ColumnMappings.Add("CVE_SCIAN", "CVE_SCIAN")
            tableMapping.ColumnMappings.Add("MUNICIPIO", "MUNICIPIO")
            tableMapping.ColumnMappings.Add("MUNICIPIOX", "MUNICIPIOX")
            tableMapping.ColumnMappings.Add("NOM_PROPIETARIO", "NOM_PROPIETARIO")
            tableMapping.ColumnMappings.Add("PROPIETARIO_CARGO", "PROPIETARIO_CARGO")
            tableMapping.ColumnMappings.Add("PROPIETARIO_DOMICILIO", "PROPIETARIO_DOMICILIO")
            tableMapping.ColumnMappings.Add("PROPIETARIO_IDENTIFICACION", "PROPIETARIO_IDENTIFICACION")
            tableMapping.ColumnMappings.Add("RAZON_SOCIAL", "RAZON_SOCIAL")
            tableMapping.ColumnMappings.Add("RAZON_SOCIALX", "RAZON_SOCIALX")
            tableMapping.ColumnMappings.Add("TELEFONO", "TELEFONO")
            tableMapping.ColumnMappings.Add("EMAIL", "EMAIL")
            tableMapping.ColumnMappings.Add("RFC", "RFC")
            tableMapping.ColumnMappings.Add("DOMICILIO", "DOMICILIO")
            tableMapping.ColumnMappings.Add("COLONIA", "COLONIA")
            tableMapping.ColumnMappings.Add("CODIGO_POSTAL", "CODIGO_POSTAL")
            tableMapping.ColumnMappings.Add("VOLUMEN_PRODUCCION", "VOLUMEN_PRODUCCION")
            tableMapping.ColumnMappings.Add("FECHA_ALTA", "FECHA_ALTA")
            tableMapping.ColumnMappings.Add("FECHA_MODIFICADO", "FECHA_MODIFICADO")
            tableMapping.ColumnMappings.Add("AVISO_FUNCIONAMIENTO", "AVISO_FUNCIONAMIENTO")
            tableMapping.ColumnMappings.Add("LICENCIA_SANITARIA", "LICENCIA_SANITARIA")
            tableMapping.ColumnMappings.Add("DIAS_LABORALES", "DIAS_LABORALES")
            tableMapping.ColumnMappings.Add("TURNOS", "TURNOS")
            tableMapping.ColumnMappings.Add("HORARIO_LABORES", "HORARIO_LABORES")
            tableMapping.ColumnMappings.Add("ESTATUS", "ESTATUS")
            tableMapping.ColumnMappings.Add("HABILITADO", "HABILITADO")
            tableMapping.ColumnMappings.Add("HORA_INICIO_LABORES", "HORA_INICIO_LABORES")
            tableMapping.ColumnMappings.Add("HORA_FIN_LABORES", "HORA_FIN_LABORES")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("DPCRSConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.pCAT_ESTABLECIMIENTOS_B"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CVE_ESTABLECIMIENTO", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PROPIETARIO", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RAZON_SOCIAL", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@cve_municipio", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTATUS", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HABILITADO", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSet_pCAT_ESTABLECIMIENTOS_B.pCAT_ESTABLECIMIENTOS_BDataTable, ByVal CVE_ESTABLECIMIENTO As Global.System.Nullable(Of Integer), ByVal PROPIETARIO As String, ByVal RAZON_SOCIAL As String, ByVal cve_municipio As Global.System.Nullable(Of Integer), ByVal ESTATUS As String, ByVal HABILITADO As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (CVE_ESTABLECIMIENTO.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(CVE_ESTABLECIMIENTO.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (PROPIETARIO Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(PROPIETARIO,String)
            End If
            If (RAZON_SOCIAL Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(RAZON_SOCIAL,String)
            End If
            If (cve_municipio.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(cve_municipio.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (ESTATUS Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(ESTATUS,String)
            End If
            If (HABILITADO.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(HABILITADO.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal CVE_ESTABLECIMIENTO As Global.System.Nullable(Of Integer), ByVal PROPIETARIO As String, ByVal RAZON_SOCIAL As String, ByVal cve_municipio As Global.System.Nullable(Of Integer), ByVal ESTATUS As String, ByVal HABILITADO As Global.System.Nullable(Of Integer)) As DataSet_pCAT_ESTABLECIMIENTOS_B.pCAT_ESTABLECIMIENTOS_BDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (CVE_ESTABLECIMIENTO.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(CVE_ESTABLECIMIENTO.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (PROPIETARIO Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(PROPIETARIO,String)
            End If
            If (RAZON_SOCIAL Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(RAZON_SOCIAL,String)
            End If
            If (cve_municipio.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(cve_municipio.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (ESTATUS Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(ESTATUS,String)
            End If
            If (HABILITADO.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(HABILITADO.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DataSet_pCAT_ESTABLECIMIENTOS_B.pCAT_ESTABLECIMIENTOS_BDataTable = New DataSet_pCAT_ESTABLECIMIENTOS_B.pCAT_ESTABLECIMIENTOS_BDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As DataSet_pCAT_ESTABLECIMIENTOS_B, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As DataSet_pCAT_ESTABLECIMIENTOS_B, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As DataSet_pCAT_ESTABLECIMIENTOS_B, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As DataSet_pCAT_ESTABLECIMIENTOS_B) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
